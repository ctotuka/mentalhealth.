# -*- coding: utf-8 -*-
"""FinalProject.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vHoNWutelGr07vNPbUCfULhFdPQ-Fn6e
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
df = pd.read_csv('/content/mental_health_finaldata_1.csv')
print("Charvi Totuka's Data Management for Data Science Final Project")
df.head()
df = df.dropna()
df.head()
print(df.describe())
print(df.info())
print(df.dtypes)

from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report, confusion_matrix
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler


plt.figure(figsize=(10, 6))
sns.histplot(df['Age'], bins=30, kde=True)
plt.title('Age Distribution')
plt.xlabel('Age')
plt.ylabel('Frequency')
plt.show()

plt.figure(figsize=(12, 8))
sns.countplot(y='Growing_Stress', data=df, order=df['Growing_Stress'].value_counts().index)
plt.title('Symptoms Frequency')
plt.xlabel('Count')
plt.ylabel('Symptoms')
plt.show()

X = df[['Age', 'Gender', 'Occupation', 'Days_Indoors']]
y = df['Growing_Stress']


X = pd.get_dummies(X, drop_first=True)


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

logreg = LogisticRegression(max_iter=1000)
logreg.fit(X_train, y_train)

y_pred = logreg.predict(X_test)


print(confusion_matrix(y_test, y_pred))
print(classification_report(y_test, y_pred))


scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

kmeans = KMeans(n_clusters= 5, random_state=42)
kmeans.fit(X_scaled)

df['Cluster'] = kmeans.labels_

plt.figure(figsize=(12, 8))
sns.scatterplot(x='Age', y='Days_Indoors', hue='Cluster', data=df, palette='viridis')
plt.title('Clusters of Individuals Based on Mental Health Profiles')
plt.xlabel('Age')
plt.ylabel('Days Indoors')
plt.show()

df['Age'] = pd.to_numeric(df['Age'], errors='coerce')

cluster_summary = df.groupby('Cluster').agg({
    'Age': 'mean',
    'Gender': lambda x: x.value_counts().index[0],
    'Occupation': lambda x: x.value_counts().index[0],
})

print(cluster_summary)

from google.colab import drive
drive.mount('/content/drive')